{"version":3,"sources":["services/breachService.js","cmps/BreachPreview.jsx","reducer/BreachReducer.js","context/BreachContext.js","cmps/BreachList.jsx","pages/BreachPage.jsx","services/StorageService.jsx","pages/BreachDetails.jsx","cmps/NavBar.jsx","cmps/Footer.jsx","App.js","serviceWorker.js","index.js"],"names":["Axios","axios","create","withCredentials","headers","getBreaches","a","offset","get","data","breaches","items","BreachPreview","breach","className","to","PwnCount","src","LogoPath","alt","id","Domain","Name","BreachDate","state","action","type","breachesItems","isLoad","BreachContext","createContext","BreachContextProvider","props","useReducer","BreachReducer","dispatch","Provider","value","children","BreachList","useContext","useState","element","setElement","observer","useRef","IntersectionObserver","entries","isIntersecting","thershold","useEffect","currElement","currObserver","current","observe","unobserve","map","ref","key","BreachPage","breachService","console","log","loadBreaches","length","query","save","post","entityType","JSON","parse","localStorage","getItem","entities","setItem","stringify","newEntity","find","entitiy","push","entityId","item","entity","BreachDetails","setBreach","loadItem","match","params","currBreach","StorageService","loadFromStroage","Fragment","dangerouslySetInnerHTML","__html","Description","DataClasses","DataClass","index","NavBar","btnStatus","setBtnStatus","userPref","document","documentElement","getAttribute","loadUserPerf","exact","htmlFor","onChange","setAttribute","checked","Footer","href","history","createBrowserHistory","App","path","component","Boolean","window","location","hostname","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7ebe200f.chunk.js","sourcesContent":["import axios from 'axios'\r\n\r\nvar Axios = axios.create({\r\n    withCredentials: true, \r\n    headers: {\r\n        'X-Best-Pokemon': 'Pikachu',\r\n        'Access-Control-Allow-Origin': '*',\r\n    }\r\n});\r\n\r\n\r\nexport default {\r\n    getBreaches,\r\n\r\n}\r\n\r\n\r\nasync function getBreaches(offset=0){\r\n    const {data}= await  Axios.get(`https://guard.io/v2/hiring/fe/breaches?offset=${offset}`)\r\n    let breaches=data.items\r\n    return [...breaches]\r\n  }\r\n\r\n\r\n ","\r\nimport React from \"react\";\r\nimport { Link } from 'react-router-dom'\r\n\r\n\r\nexport default function BreachPreview({ breach }) {\r\n  \r\n  return (\r\n     <Link className=\"card flex column align-center \" to={`/breach/${breach.PwnCount}`}> \r\n      <img className=\"card-image\" src={breach.LogoPath} alt=\"\" />\r\n      <div className=\"card-info\">\r\n      <div className=\"flex justify-center\">\r\n      <p className=\"domain\" id=\"title\" >{breach.Domain ||breach.Name}  </p>\r\n      </div>\r\n      <div className=\"flex justify-center\">\r\n      <p className=\"date\">{breach.BreachDate} </p>\r\n      </div>\r\n      </div>\r\n    </Link>\r\n    \r\n  );\r\n}\r\n","\r\n  export default function (state , action = {}) {\r\n    switch (action.type) {\r\n      case 'SET_BREACHES':\r\n        return { ...state, breaches: [...state.breaches,...action.breachesItems] };\r\n      case 'INC_OFFSET':\r\n        return { ...state, offset:state.offset+11 };\r\n      case 'SET_LOAD':\r\n        return { ...state, isLoad:!state.isLoad };\r\n      default:\r\n        return state;\r\n    }\r\n  }\r\n  ","import React, { createContext, useReducer } from 'react'\r\nimport BreachReducer from '../reducer/BreachReducer'\r\nexport const BreachContext = createContext()\r\n\r\nconst BreachContextProvider = (props) => {\r\n\r\n    const [{ breaches,offset,isLoad }, dispatch] = useReducer(BreachReducer, {\r\n        breaches:[],offset:0,isLoad:true\r\n    })\r\n        \r\n\r\n    return (\r\n\r\n        <BreachContext.Provider value={{ breaches,offset,isLoad, dispatch }}>\r\n            {props.children}\r\n        </BreachContext.Provider>\r\n\r\n    )\r\n\r\n}\r\n\r\nexport default BreachContextProvider\r\n","import React, { useRef, useState, useEffect, useContext } from \"react\";\r\nimport BreachPreview from \"./BreachPreview\";\r\nimport { BreachContext } from \"../context/BreachContext\";\r\nimport breachService from \"../services/breachService\";\r\n\r\nexport default function BreachList(props) {\r\n  const { breaches, offset, dispatch } = useContext(BreachContext);\r\n  const [element, setElement] = useState(\"\");\r\n \r\n\r\n  const observer = useRef(\r\n    new IntersectionObserver((entries) => {\r\n      const firstElement = entries[0];\r\n      if (firstElement.isIntersecting) {\r\n        incOffset()\r\n      }\r\n    }),\r\n\r\n    { thershold: 1 }\r\n  );\r\n\r\n  useEffect(() => {\r\n    const currElement = element;\r\n    const currObserver = observer.current;\r\n    if (currElement) {\r\n      currObserver.observe(currElement);\r\n    }\r\n    return () => {\r\n      if (currElement) {\r\n        currObserver.unobserve(currElement);\r\n      }\r\n    };\r\n  }, [element]);\r\n\r\n   function incOffset(){\r\n    dispatch({ type: \"INC_OFFSET\" });\r\n  }\r\n\r\n  return (\r\n    <ul className=\"list\">\r\n      {props.breaches.map((breach) => (\r\n        <div ref={setElement}  key={breach.PwnCount} className=\"item\">\r\n          <BreachPreview breach={breach} ></BreachPreview>\r\n        </div>\r\n      ))}\r\n    </ul>\r\n  );\r\n}\r\n","import React, { useEffect, useContext } from \"react\";\r\nimport breachService from \"../services/breachService\";\r\nimport BreachList from \"../cmps/BreachList\";\r\nimport { BreachContext } from \"../context/BreachContext\";\r\n\r\nexport default function BreachPage() {\r\n  const { breaches, isLoad, offset, dispatch } = useContext(BreachContext);\r\n\r\n  useEffect(() => {\r\n    if (offset !== 0 && !isLoad) return;\r\n    dispatch({ type: \"SET_LOAD\" });\r\n    loadBreaches();\r\n  }, [offset]);\r\n\r\n  async function loadBreaches() {\r\n    try {\r\n      dispatch({ type: \"SET_LOAD\" });\r\n      const breachesItems = await breachService.getBreaches(offset);\r\n      dispatch({ type: \"SET_BREACHES\", breachesItems });\r\n    } catch (err) {\r\n      console.log(\" err in breaches\", err);\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`flex1 container top-padding`}>\r\n      {breaches.length > 0 && <BreachList breaches={breaches}></BreachList>}\r\n    </div>\r\n  );\r\n}\r\n","\r\n\r\nexport default {\r\n    query,\r\n    save,\r\n    post,\r\n    get\r\n}\r\n\r\nfunction query(entityType) {\r\n    let entities = JSON.parse(localStorage.getItem(entityType)) \r\n    return entities\r\n}\r\n\r\nfunction save(entityType, entities) {\r\n    localStorage.setItem(entityType, JSON.stringify(entities))\r\n}\r\n\r\n\r\n\r\nasync function post(entityType, newEntity) {\r\n    let entities = await query(entityType)\r\n    if (entities) {\r\n    let currEntity=entities.find(entitiy=>entitiy.PwnCount===newEntity.PwnCount)\r\n    if (currEntity) return\r\n    entities.push(newEntity);\r\n    save(entityType, entities)\r\n}\r\n    else {\r\n    save( entityType, [newEntity] )\r\n\r\n    }\r\n    return newEntity;\r\n}\r\n\r\n\r\nasync function get(entityType, entityId) {\r\n    let entities=await query(entityType)\r\n           let item= entities.find(entity => entity.PwnCount === entityId)\r\n           return item\r\n    }","import React, { useContext, useEffect, useState } from \"react\";\r\nimport { BreachContext } from \"../context/BreachContext\";\r\nimport StorageService from \"../services/StorageService\";\r\n\r\nexport default function BreachDetails(props) {\r\n\r\n  const { breaches, dispatch } = useContext(BreachContext);\r\n  const [breach, setBreach] = useState(null);\r\n\r\n  function loadItem() {\r\n    let PwnCount = +props.match.params.id;\r\n    let item = breaches.find((currBreach) => currBreach.PwnCount === PwnCount);\r\n    if (!item) {\r\n      loadFromStroage(PwnCount);\r\n    } else {\r\n      setBreach(item);\r\n      StorageService.post(\"items\", item);\r\n    }\r\n  }\r\n\r\n  async function loadFromStroage(PwnCount) {\r\n    let item = await StorageService.get(\"items\", PwnCount);\r\n    setBreach(item);\r\n  }\r\n\r\n  useEffect(() => {\r\n    \r\n    dispatch({ type: \"SET_LOAD\" });\r\n    loadItem();\r\n    return () => {\r\n      dispatch({ type: \"SET_LOAD\" });\r\n    };\r\n  }, []);\r\n\r\n  return (\r\n    <div className={`flex column flex1 container top-padding details`}>\r\n      {breach?\r\n      <React.Fragment>\r\n      <div className=\"flex item-title-wrapper\">\r\n      <img  className=\"item-image\" src={breach.LogoPath} alt=\"\" />\r\n      <h3 className=\"item-title\">{breach.Domain ||breach.Name}</h3>\r\n      </div>\r\n      <hr/>\r\n      <div className=\"item-date\">Breach Date: {breach.BreachDate}</div>\r\n      <p className=\"item-description flex1\" dangerouslySetInnerHTML={{__html: breach.Description}}/>\r\n        <div className=\"data-classes\"> Impacted data classes : \r\n      {breach.DataClasses.map((DataClass,index) => (\r\n        <p  key={index} className=\"item\">\r\n         {DataClass}\r\n        </p>\r\n      ))}\r\n      </div>\r\n      </React.Fragment>\r\n      :\r\n      <div>No Details To show</div>\r\n      }\r\n    </div>\r\n  );\r\n}\r\n","import React, {useState, useEffect } from \"react\";\r\nimport { NavLink} from \"react-router-dom\";\r\n\r\nimport StorageService from \"../services/StorageService\";\r\n\r\nexport default function NavBar() {\r\n \r\n  const [btnStatus,setBtnStatus]=useState(false)\r\n\r\n\r\n   function toggleTheme() {\r\n    let status=!btnStatus\r\n    setBtnStatus(status)\r\n    document.documentElement.setAttribute('data-theme', btnStatus ? \"light\" : \"dark\");\r\n    StorageService.save(\"theme\", btnStatus ?  \"light\":\"dark\");\r\n  }\r\n\r\n\r\n  useEffect(() => {\r\n      loadUserPerf()\r\n  }, [])\r\n\r\n\r\n  function loadUserPerf() {\r\n      let userPref=document.documentElement.getAttribute(\"data-theme\") === \"dark\"\r\n    setBtnStatus(userPref)\r\n  }\r\n\r\n \r\n\r\n  return (\r\n    <div className={`nav-bar container flex`}>\r\n      <div className={`center-side-nav flex column align-center `}>\r\n        <NavLink className=\"section selected\" to=\"/\" exact>\r\n          <li>Home</li>\r\n        </NavLink>\r\n        <NavLink className=\"section selected\" to=\"/\" exact>\r\n          <li>Breaches</li>\r\n        </NavLink>\r\n      \r\n        <NavLink  className=\"section selected\" to=\"/\" exact>\r\n          <li>FAQ</li>\r\n        </NavLink>\r\n      </div>\r\n\r\n      <div className={`right-side-nav flex align-center `}>\r\n        <div className=\"main-search flex\">\r\n        <label id=\"theme-switch\" className=\"theme-switch\" htmlFor=\"checkbox_theme\">\r\n    <input onChange={toggleTheme} type=\"checkbox\" id=\"checkbox_theme\" checked={btnStatus}/>\r\n</label>\r\n\r\n\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react'\r\nimport { FaFacebookSquare, FaInstagram, FaLinkedin } from 'react-icons/fa';\r\n\r\nexport default function Footer() {\r\n    return (\r\n        <div className=\"footer\">\r\n            <div className=\"footer-wrapper flex space-between\">\r\n                <div className=\"rights\">All rights reserved</div>\r\n                <div className=\"icons flex \">\r\n                    <a href=\"https://www.facebook.com\">  <FaFacebookSquare className=\"icon fa\" /></a>\r\n                    <a href=\"https://www.instagram.com\"> <FaInstagram className=\"icon in\" /></a>\r\n                    <a href=\"https://www.linkedin.com/in/roy-amar-9b848224/\"><FaLinkedin className=\"icon fa\" /></a>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import React from \"react\";\nimport './styles/global.scss';\nimport BreachPage from './pages/BreachPage'\nimport BreachDetails from './pages/BreachDetails'\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport { createBrowserHistory } from 'history';\nimport BreachContextProvider from \"./context/BreachContext\";\nimport NavBar from \"./cmps/NavBar\";\nimport Footer from \"./cmps/Footer\";\n\n\n\nconst history = createBrowserHistory();\nfunction App() {\n\n  return (\n    <BrowserRouter history={history}>\n    <NavBar></NavBar>\n      <BreachContextProvider>\n        <Switch>\n          <Route path=\"/breach\" component={BreachPage} exact></Route>\n          <Route path=\"/breach/:id\" component={BreachDetails} exact></Route>\n        </Switch>\n      </BreachContextProvider>\n      <Footer></Footer>\n    </BrowserRouter>\n\n  );\n}\nexport default App;\n\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}